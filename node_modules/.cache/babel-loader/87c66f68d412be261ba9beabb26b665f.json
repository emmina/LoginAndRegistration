{"ast":null,"code":"import _regeneratorRuntime from \"/Users/emina/projects/PovioChallenge/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/emina/projects/PovioChallenge/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n// A global counter, to ensure we generate unique names for nameless functions.\nvar counter = 1;\n/* Wraps an action creator in order to dispatch two extra actions: one just\n * before dispatching the action, and one when dispatching has either completed\n * or erred.\n */\n\nexport default function asyncActionCreator(actionCreator) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$name = _ref.name,\n      name = _ref$name === void 0 ? actionCreator.name || \"asyncAction_\".concat(counter++) : _ref$name,\n      _ref$START = _ref.START,\n      START = _ref$START === void 0 ? \"\".concat(name, \"_START\") : _ref$START,\n      _ref$ERROR = _ref.ERROR,\n      ERROR = _ref$ERROR === void 0 ? \"\".concat(name, \"_ERROR\") : _ref$ERROR,\n      _ref$COMPLETE = _ref.COMPLETE,\n      COMPLETE = _ref$COMPLETE === void 0 ? \"\".concat(name, \"_COMPLETE\") : _ref$COMPLETE;\n\n  var newActionCreator = function newActionCreator(payload) {\n    for (var _len = arguments.length, otherArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      otherArgs[_key - 1] = arguments[_key];\n    }\n\n    return (\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(dispatch) {\n          var action, valueOrPromise, value;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  action = actionCreator.apply(void 0, [payload].concat(otherArgs));\n                  dispatch({\n                    type: START,\n                    payload: payload\n                  });\n                  _context.prev = 2;\n                  valueOrPromise = dispatch(action);\n                  _context.next = 6;\n                  return valueOrPromise;\n\n                case 6:\n                  value = _context.sent;\n                  dispatch({\n                    type: COMPLETE,\n                    payload: value\n                  });\n                  return _context.abrupt(\"return\", value);\n\n                case 11:\n                  _context.prev = 11;\n                  _context.t0 = _context[\"catch\"](2);\n                  dispatch({\n                    type: ERROR,\n                    payload: {\n                      error: _context.t0,\n                      args: payload\n                    }\n                  });\n                  throw _context.t0;\n\n                case 15:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this, [[2, 11]]);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }()\n    );\n  };\n\n  if (Object.getOwnPropertyDescriptor(newActionCreator, 'name').configurable) {\n    Object.defineProperty(newActionCreator, 'name', {\n      value: name\n    });\n  } else {\n    Object.assign(newActionCreator, {\n      toString: function toString() {\n        return name;\n      }\n    });\n  }\n\n  newActionCreator.innerFunc = actionCreator;\n  newActionCreator.START = START;\n  newActionCreator.COMPLETE = COMPLETE;\n  newActionCreator.ERROR = ERROR;\n  return newActionCreator;\n}","map":{"version":3,"sources":["/Users/emina/projects/PovioChallenge/src/helpers/asyncActionCreator.js"],"names":["counter","asyncActionCreator","actionCreator","name","START","ERROR","COMPLETE","newActionCreator","payload","otherArgs","dispatch","action","type","valueOrPromise","value","error","args","Object","getOwnPropertyDescriptor","configurable","defineProperty","assign","toString","innerFunc"],"mappings":";;AAAA;AACA,IAAIA,OAAO,GAAG,CAAd;AAEA;;;;;AAIA,eAAe,SAASC,kBAAT,CAA4BC,aAA5B,EAKP;AAAA,iFAAJ,EAAI;AAAA,uBAJNC,IAIM;AAAA,MAJNA,IAIM,0BAJCD,aAAa,CAACC,IAAd,0BAAqCH,OAAO,EAA5C,CAID;AAAA,wBAHNI,KAGM;AAAA,MAHNA,KAGM,qCAHKD,IAGL;AAAA,wBAFNE,KAEM;AAAA,MAFNA,KAEM,qCAFKF,IAEL;AAAA,2BADNG,QACM;AAAA,MADNA,QACM,wCADQH,IACR;;AACN,MAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,OAAD;AAAA,sCAAaC,SAAb;AAAaA,MAAAA,SAAb;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA2B,iBAAgBC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5CC,kBAAAA,MAD4C,GACnCT,aAAa,MAAb,UAAcM,OAAd,SAA0BC,SAA1B,EADmC;AAElDC,kBAAAA,QAAQ,CAAC;AACPE,oBAAAA,IAAI,EAAER,KADC;AAEPI,oBAAAA,OAAO,EAAPA;AAFO,mBAAD,CAAR;AAFkD;AAO1CK,kBAAAA,cAP0C,GAOzBH,QAAQ,CAACC,MAAD,CAPiB;AAAA;AAAA,yBAQ5BE,cAR4B;;AAAA;AAQ1CC,kBAAAA,KAR0C;AAShDJ,kBAAAA,QAAQ,CAAC;AACPE,oBAAAA,IAAI,EAAEN,QADC;AAEPE,oBAAAA,OAAO,EAAEM;AAFF,mBAAD,CAAR;AATgD,mDAazCA,KAbyC;;AAAA;AAAA;AAAA;AAehDJ,kBAAAA,QAAQ,CAAC;AACPE,oBAAAA,IAAI,EAAEP,KADC;AAEPG,oBAAAA,OAAO,EAAE;AAAEO,sBAAAA,KAAK,aAAP;AAASC,sBAAAA,IAAI,EAAER;AAAf;AAFF,mBAAD,CAAR;AAfgD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA3B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAuBA,MAAGS,MAAM,CAACC,wBAAP,CAAgCX,gBAAhC,EAAkD,MAAlD,EAA0DY,YAA7D,EAA0E;AACxEF,IAAAA,MAAM,CAACG,cAAP,CAAsBb,gBAAtB,EAAwC,MAAxC,EAAgD;AAAEO,MAAAA,KAAK,EAAEX;AAAT,KAAhD;AACD,GAFD,MAEK;AACHc,IAAAA,MAAM,CAACI,MAAP,CAAcd,gBAAd,EAAgC;AAAEe,MAAAA,QAAQ,EAAE;AAAA,eAAMnB,IAAN;AAAA;AAAZ,KAAhC;AACD;;AACDI,EAAAA,gBAAgB,CAACgB,SAAjB,GAA6BrB,aAA7B;AAEAK,EAAAA,gBAAgB,CAACH,KAAjB,GAAyBA,KAAzB;AACAG,EAAAA,gBAAgB,CAACD,QAAjB,GAA4BA,QAA5B;AACAC,EAAAA,gBAAgB,CAACF,KAAjB,GAAyBA,KAAzB;AAEA,SAAOE,gBAAP;AACD","sourcesContent":["// A global counter, to ensure we generate unique names for nameless functions.\nlet counter = 1;\n\n/* Wraps an action creator in order to dispatch two extra actions: one just\n * before dispatching the action, and one when dispatching has either completed\n * or erred.\n */\nexport default function asyncActionCreator(actionCreator, {\n  name = actionCreator.name || `asyncAction_${counter++}`,\n  START = `${name}_START`,\n  ERROR = `${name}_ERROR`,\n  COMPLETE = `${name}_COMPLETE`,\n} = {}) {\n  const newActionCreator = (payload, ...otherArgs) => async function (dispatch) {\n    const action = actionCreator(payload, ...otherArgs);\n    dispatch({\n      type: START,\n      payload,\n    });\n    try {\n      const valueOrPromise = dispatch(action);\n      const value = await valueOrPromise;\n      dispatch({\n        type: COMPLETE,\n        payload: value,\n      });\n      return value;\n    } catch (error) {\n      dispatch({\n        type: ERROR,\n        payload: { error, args: payload },\n      });\n      throw error;\n    }\n  };\n\n  if(Object.getOwnPropertyDescriptor(newActionCreator, 'name').configurable){\n    Object.defineProperty(newActionCreator, 'name', { value: name });\n  }else{\n    Object.assign(newActionCreator, { toString: () => name })\n  }\n  newActionCreator.innerFunc = actionCreator;\n\n  newActionCreator.START = START;\n  newActionCreator.COMPLETE = COMPLETE;\n  newActionCreator.ERROR = ERROR;\n\n  return newActionCreator;\n}"]},"metadata":{},"sourceType":"module"}