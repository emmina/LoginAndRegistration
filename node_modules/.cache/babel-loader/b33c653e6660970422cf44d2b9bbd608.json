{"ast":null,"code":"import { userConstants } from '../constants';\nimport { history } from '../helpers';\nimport { userService } from '../services';\n\nfunction register(user) {\n  return function (dispatch) {\n    dispatch(request(user));\n    userService.register(user).then(function (user) {\n      dispatch(success());\n      history.push('/');\n    }, function (error) {\n      dispatch(failure(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.REGISTER_REQUEST,\n      user: user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.REGISTER_SUCCESS,\n      user: user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.REGISTER_FAILURE,\n      error: error\n    };\n  }\n}\n\nfunction login(username, password) {\n  return function (dispatch) {\n    dispatch(request({\n      username: username\n    }));\n    userService.login(username, password).then(function (user) {\n      dispatch(success(user));\n      history.push('/');\n    }, function (error) {\n      dispatch(failure(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user: user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      user: user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error: error\n    };\n  }\n}\n\nfunction getUser() {\n  return function (dispatch) {\n    dispatch(request());\n    userService.getAll().then(function (user) {\n      return dispatch(success(user));\n    }, function (error) {\n      return dispatch(failure(error.toString()));\n    });\n  };\n\n  function request() {\n    return {\n      type: userConstants.GETUSER_REQUEST\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.GETUSER_SUCCESS,\n      user: user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.GETUSER_FAILURE,\n      error: error\n    };\n  }\n}\n\nexport var userActions = {\n  register: register,\n  login: login,\n  getUser: getUser\n};","map":{"version":3,"sources":["/Users/emina/projects/PovioChallenge/src/actions/userActions.jsx"],"names":["userConstants","history","userService","register","user","dispatch","request","then","success","push","error","failure","toString","type","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","login","username","password","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","getUser","getAll","GETUSER_REQUEST","GETUSER_SUCCESS","GETUSER_FAILURE","userActions"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACpB,SAAO,UAAAC,QAAQ,EAAI;AACfA,IAAAA,QAAQ,CAACC,OAAO,CAACF,IAAD,CAAR,CAAR;AAEAF,IAAAA,WAAW,CAACC,QAAZ,CAAqBC,IAArB,EACKG,IADL,CAEQ,UAAAH,IAAI,EAAI;AACJC,MAAAA,QAAQ,CAACG,OAAO,EAAR,CAAR;AACAP,MAAAA,OAAO,CAACQ,IAAR,CAAa,GAAb;AACH,KALT,EAMQ,UAAAC,KAAK,EAAI;AACLL,MAAAA,QAAQ,CAACM,OAAO,CAACD,KAAK,CAACE,QAAN,EAAD,CAAR,CAAR;AACH,KART;AAUH,GAbD;;AAeA,WAASN,OAAT,CAAiBF,IAAjB,EAAuB;AAAE,WAAO;AAAES,MAAAA,IAAI,EAAEb,aAAa,CAACc,gBAAtB;AAAwCV,MAAAA,IAAI,EAAJA;AAAxC,KAAP;AAAuD;;AAChF,WAASI,OAAT,CAAiBJ,IAAjB,EAAuB;AAAE,WAAO;AAAES,MAAAA,IAAI,EAAEb,aAAa,CAACe,gBAAtB;AAAwCX,MAAAA,IAAI,EAAJA;AAAxC,KAAP;AAAuD;;AAChF,WAASO,OAAT,CAAiBD,KAAjB,EAAwB;AAAE,WAAO;AAAEG,MAAAA,IAAI,EAAEb,aAAa,CAACgB,gBAAtB;AAAwCN,MAAAA,KAAK,EAALA;AAAxC,KAAP;AAAwD;AACrF;;AAED,SAASO,KAAT,CAAeC,QAAf,EAAyBC,QAAzB,EAAmC;AAC/B,SAAO,UAAAd,QAAQ,EAAI;AACfA,IAAAA,QAAQ,CAACC,OAAO,CAAC;AAAEY,MAAAA,QAAQ,EAARA;AAAF,KAAD,CAAR,CAAR;AAEAhB,IAAAA,WAAW,CAACe,KAAZ,CAAkBC,QAAlB,EAA4BC,QAA5B,EACKZ,IADL,CAEQ,UAAAH,IAAI,EAAI;AACJC,MAAAA,QAAQ,CAACG,OAAO,CAACJ,IAAD,CAAR,CAAR;AACAH,MAAAA,OAAO,CAACQ,IAAR,CAAa,GAAb;AACH,KALT,EAMQ,UAAAC,KAAK,EAAI;AACLL,MAAAA,QAAQ,CAACM,OAAO,CAACD,KAAK,CAACE,QAAN,EAAD,CAAR,CAAR;AACH,KART;AAUH,GAbD;;AAeA,WAASN,OAAT,CAAiBF,IAAjB,EAAuB;AAAE,WAAO;AAAES,MAAAA,IAAI,EAAEb,aAAa,CAACoB,aAAtB;AAAqChB,MAAAA,IAAI,EAAJA;AAArC,KAAP;AAAoD;;AAC7E,WAASI,OAAT,CAAiBJ,IAAjB,EAAuB;AAAE,WAAO;AAAES,MAAAA,IAAI,EAAEb,aAAa,CAACqB,aAAtB;AAAqCjB,MAAAA,IAAI,EAAJA;AAArC,KAAP;AAAoD;;AAC7E,WAASO,OAAT,CAAiBD,KAAjB,EAAwB;AAAE,WAAO;AAAEG,MAAAA,IAAI,EAAEb,aAAa,CAACsB,aAAtB;AAAqCZ,MAAAA,KAAK,EAALA;AAArC,KAAP;AAAqD;AAClF;;AAED,SAASa,OAAT,GAAmB;AACf,SAAO,UAAAlB,QAAQ,EAAI;AACfA,IAAAA,QAAQ,CAACC,OAAO,EAAR,CAAR;AAEAJ,IAAAA,WAAW,CAACsB,MAAZ,GACKjB,IADL,CAEQ,UAAAH,IAAI;AAAA,aAAIC,QAAQ,CAACG,OAAO,CAACJ,IAAD,CAAR,CAAZ;AAAA,KAFZ,EAGQ,UAAAM,KAAK;AAAA,aAAIL,QAAQ,CAACM,OAAO,CAACD,KAAK,CAACE,QAAN,EAAD,CAAR,CAAZ;AAAA,KAHb;AAKH,GARD;;AAUA,WAASN,OAAT,GAAmB;AAAE,WAAO;AAAEO,MAAAA,IAAI,EAAEb,aAAa,CAACyB;AAAtB,KAAP;AAAgD;;AACrE,WAASjB,OAAT,CAAiBJ,IAAjB,EAAuB;AAAE,WAAO;AAAES,MAAAA,IAAI,EAAEb,aAAa,CAAC0B,eAAtB;AAAuCtB,MAAAA,IAAI,EAAJA;AAAvC,KAAP;AAAsD;;AAC/E,WAASO,OAAT,CAAiBD,KAAjB,EAAwB;AAAE,WAAO;AAAEG,MAAAA,IAAI,EAAEb,aAAa,CAAC2B,eAAtB;AAAuCjB,MAAAA,KAAK,EAALA;AAAvC,KAAP;AAAuD;AACpF;;AAED,OAAO,IAAMkB,WAAW,GAAG;AACvBzB,EAAAA,QAAQ,EAARA,QADuB;AAEvBc,EAAAA,KAAK,EAALA,KAFuB;AAGvBM,EAAAA,OAAO,EAAPA;AAHuB,CAApB","sourcesContent":["import { userConstants } from '../constants';\nimport { history } from '../helpers';\nimport { userService } from '../services';\n\nfunction register(user) {\n    return dispatch => {\n        dispatch(request(user));\n\n        userService.register(user)\n            .then(\n                user => { \n                    dispatch(success());\n                    history.push('/');\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\nfunction login(username, password) {\n    return dispatch => {\n        dispatch(request({ username }));\n\n        userService.login(username, password)\n            .then(\n                user => { \n                    dispatch(success(user));\n                    history.push('/');\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\n}\n\nfunction getUser() {\n    return dispatch => {\n        dispatch(request());\n\n        userService.getAll()\n            .then(\n                user => dispatch(success(user)),\n                error => dispatch(failure(error.toString()))\n            );\n    };\n\n    function request() { return { type: userConstants.GETUSER_REQUEST } }\n    function success(user) { return { type: userConstants.GETUSER_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.GETUSER_FAILURE, error } }\n}\n\nexport const userActions = {\n    register,\n    login,\n    getUser\n};"]},"metadata":{},"sourceType":"module"}